{
Weekly.WIS.NonEnsemble %>%
filter(models == i) %>%
select(Target_Date, rel.WIS.skill) %>%
plot(type="b", pch = 16, ylim =
c(min(Weekly.WIS$rel.WIS.skill),
max(Weekly.WIS$rel.WIS.skill)),
las=1,
xlab = "Epi-Week Forecasted",
ylab = "Pairwise WIS", xaxt="n")
axis(side = 1,
at = Weekly.WIS.Ensemble$Target_Date,
labels = Weekly.WIS.Ensemble$EpiWeek)
}
else
{
Weekly.WIS.NonEnsemble %>%
filter(models == i) %>%
select(Target_Date, rel.WIS.skill) %>%
lines(type="b", pch = 16)
}
}
Weekly.WIS.Ensemble %>%
select(Target_Date, rel.WIS.skill) %>%
lines(type="b", pch = 16, col = "red", cex = 1.5)
legend("topleft",
legend =
c("Ensemble",
"Individual Models"),
fill = c("red", "black"))
par(mar=c(3,4,3,7))
for(i in unique(Weekly.WIS.NonEnsemble$models))
{
if(i == unique(Weekly.WIS.NonEnsemble$models)[1])
{
Weekly.WIS.NonEnsemble %>%
filter(models == i) %>%
mutate(rank = length(unique(Weekly.WIS$models)) + 1 -rank) %>%
select(Target_Date, rank) %>%
plot(type="b", pch = 16,
ylim =
c(1,1*length(unique(Weekly.WIS$models))),
las=1,
xlab = "Epi-Week Forecasted",
ylab = "Model Ranking (Pairwise WIS)",
xaxt="n", yaxt="n")
axis(side = 1,
at = Weekly.WIS.Ensemble$Target_Date,
labels = Weekly.WIS.Ensemble$EpiWeek)
axis(side =2,
at = 1:length(unique(Weekly.WIS$models)),
labels = length(unique(Weekly.WIS$models)):1,
las=1)
}
else
{
Weekly.WIS.NonEnsemble %>%
filter(models == i) %>%
mutate(rank = length(unique(Weekly.WIS$models)) + 1 -rank) %>%
select(Target_Date, rank) %>%
lines(type="b", pch = 16, col="black")
}
FinalWeek.WIS =
filter(Weekly.WIS,
Target_Date == max(as.Date(Target_Date))) %>%
mutate(rank = length(unique(Weekly.WIS$models)) + 1 -rank) %>%
select(rank, models)
axis(side = 4,
at = FinalWeek.WIS$rank,
labels = FinalWeek.WIS$models,
las=1)
}
Weekly.WIS.Ensemble %>%
mutate(rank = length(unique(Weekly.WIS$models)) + 1 -rank) %>%
select(Target_Date, rank) %>%
lines(type="b", pch = 16, col = "red", cex = 1.5)
par(mfrow=c(2,2))
# Absolute WIS
inc.rankings_last.8.weeks %>%
#filter(Model != "Ensemble") %>%
select(`Pairwise WIS`, `Absolute WIS`)  %>%
plot(las=1, main = "Pairwise vs Absolute WIS",pch=16)
inc.rankings_last.8.weeks %>%
filter(Model == "Flusight-ensemble") %>%
select(`Pairwise WIS`, `Absolute WIS`)  %>%
points(col = "red", pch = 16, cex = 1.5)
# MAE
inc.rankings_last.8.weeks %>%
#filter(Model != "Ensemble") %>%
select(`Pairwise WIS`, MAE)  %>%
plot(las=1, main = "Pairwise WIS vs MAE",pch=16)
inc.rankings_last.8.weeks %>%
filter(Model == "Flusight-ensemble") %>%
select(`Pairwise WIS`, MAE)  %>%
points(col = "red", pch = 16, cex = 1.5)
# 50% coverage
inc.rankings_last.8.weeks %>%
#filter(Model != "Ensemble") %>%
select(`Pairwise WIS`, `50% Coverage (%)`)  %>%
plot(las=1, main = "Pairwise WIS vs 50% Coverage",pch=16)
inc.rankings_last.8.weeks %>%
filter(Model == "Flusight-ensemble") %>%
select(`Pairwise WIS`, `50% Coverage (%)`)  %>%
points(col = "red", pch = 16, cex = 1.5)
# 95% coverage
inc.rankings_last.8.weeks %>%
#filter(Model != "Ensemble") %>%
select(`Pairwise WIS`, `95% Coverage (%)`)  %>%
plot(las=1, main = "Pairwise WIS vs 95% Coverage",pch=16)
inc.rankings_last.8.weeks %>%
filter(Model == "Flusight-ensemble") %>%
select(`Pairwise WIS`, `95% Coverage (%)`)  %>%
points(col = "red", pch = 16, cex = 1.5)
inc.rankings_last.8.weeks %>%
select(Model,  `% of Forecasts Submitted`,
`% of Locations Forecasted`,
`% of Locations Fully Forecasted`,
`% of Submitted Locations with All Forecasts`
) %>%
datatable()
options(dplyr.summarise.inform = FALSE)
library(MMWRweek)
observed.weeks =
c(as.character(
sort(last.tuesday+4 - 7*(0:((eval.weeks-1)+max(window.width)-1)))
))
long.term.df = data.frame()
for(i in window.width)
{
for(j in observed.weeks[i:length(observed.weeks)])
{
WIS = filter(WIS_all, as.Date(target_end_date) %in%
c(as.Date(j)- 7*(0:(i-1))))
WIS =
left_join(WIS,
locations_fully_forecasted(WIS),
by = "model")# %>%
#  filter(locations.fully.forecasted >= 50) %>%
#  select(-locations.fully.forecasted)
long.term.df =
make_WIS_ranking(WIS) %>%
#  filter(frac.locations.fully.forecasted >= 50/length(unique(WIS$location_name))) %>%
mutate(models = model_display_names[as.character(models)],
Window = i,
Last.Obs.Week = j,
Last.Obs.EW = paste0("EW",MMWRweek(j)$MMWRweek),
mean.WIS = round(mean.WIS,2),
rel.WIS.skill = round(rel.WIS.skill,2),
MAE = round(MAE,2),#) %>% #,
Quantile = (max(rank)-rank+1)/max(rank)) %>%
rbind(long.term.df)
}
}
invisible(source(paste0(ncov19hub, "Model names and colors.R")))
model_colors["COVIDhub-4_week_ensemble"] = "black"
names(model_colors) = model_display_names[names(model_colors)]
colScale =
scale_color_manual(name="Model",
values =
model_colors[sort(names(model_colors))],
breaks = sort(names(model_colors)))
Last.Obs.EWs =
unique(long.term.df$Last.Obs.EW) %>%
substr(start = 3,stop = 4) %>%
as.numeric()
Last.Obs.EWs =
paste0("EW",
c(sort(Last.Obs.EWs[which(Last.Obs.EWs>=25)]),
sort(Last.Obs.EWs[which(Last.Obs.EWs<25)])))#,
#sort(Last.Obs.EWs[which(Last.Obs.EWs>=25)])))
long.term.df =
long.term.df %>%
mutate(Last.Obs.Week = as.Date(Last.Obs.Week),
Last.Obs.EW =
factor(Last.Obs.EW,
levels = Last.Obs.EWs)) %>%
rename("Model" = models) %>%
arrange(Last.Obs.Week)
#long.term.df$Last.OBs.EW =
#  factor(l)
long.term.df.2wk = filter(long.term.df, Window==2)
long.term.df.4wk = filter(long.term.df, Window==4)
long.term.df.8wk = filter(long.term.df, Window==8)
long.term.df.NonEnsemble.2wk =
filter(long.term.df.2wk)#, Model!="Ensemble")
long.term.df.Ensemble.2wk =
filter(long.term.df.2wk, Model=="Flusight-ensemble")
long.term.df.NonEnsemble.4wk =
filter(long.term.df.4wk)#, Model!="Ensemble")
long.term.df.Ensemble.4wk =
filter(long.term.df.4wk, Model=="Flusight-ensemble")
long.term.df.NonEnsemble.8wk =
filter(long.term.df.8wk)#, Model!="Ensemble")
long.term.df.Ensemble.8wk =
filter(long.term.df.8wk, Model=="Flusight-ensemble")
theme_set(theme(text  = element_text(face="bold"),
legend.position = "bottom"))
p = ggplot() +
geom_line(data = long.term.df.NonEnsemble.2wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model,
colour = Model),
size = .8, alpha = 0.5) +
geom_point(data = long.term.df.NonEnsemble.2wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model,
colour = Model),
size = 2, alpha = 0.5) +
colScale +
geom_line(data = long.term.df.Ensemble.2wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model),
colour = "black", size = 1) +
geom_point(data = long.term.df.Ensemble.2wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model),
colour = "black", size = 2.2) +
ylab("Mean Pairwise WIS") +
xlab("Last Week of Evaluation Window") +
ggtitle(label = "2 Week Evaluation Window") +
scale_y_continuous(limits =
c(0,max(long.term.df$rel.WIS.skill))) +
guides(group=guide_legend(ncol=2))
p %>%
ggplotly(tooltip = c("group")) %>%
layout(legend = list(orientation = "h",
bordercolor="black",
borderwidth = 2,
font = list(size = 11),
y=-.22))
p = ggplot() +
geom_line(data = long.term.df.NonEnsemble.4wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model,
colour = Model),
size = .8, alpha = 0.5) +
geom_point(data = long.term.df.NonEnsemble.4wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model,
colour = Model),
size = 2, alpha = 0.5) +
colScale +
geom_line(data = long.term.df.Ensemble.4wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model),
colour = "black", size = 1) +
geom_point(data = long.term.df.Ensemble.4wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model),
colour = "black", size = 2.2) +
ylab("Mean Pairwise WIS") +
xlab("Last Week of Evaluation Window") +
ggtitle(label = "4 Week Evaluation Window") +
scale_y_continuous(limits =
c(0,max(long.term.df$rel.WIS.skill)))
p %>%
ggplotly(tooltip = c("group")) %>%
layout(legend = list(orientation = "h",
bordercolor="black",
borderwidth = 2,
font = list(size = 11),
y=-.22))
p = ggplot() +
geom_line(data = long.term.df.NonEnsemble.8wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model,
colour = Model),
size = .8, alpha = 0.5) +
geom_point(data = long.term.df.NonEnsemble.8wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model,
colour = Model),
size = 2, alpha = 0.5) +
colScale +
geom_line(data = long.term.df.Ensemble.8wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model),
colour = "black", size = 1) +
geom_point(data = long.term.df.Ensemble.8wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model),
colour = "black", size = 2.2) +
ylab("Mean Pairwise WIS") +
xlab("Last Week of Evaluation Window") +
ggtitle(label = "8 Week Evaluation Window") +
scale_y_continuous(limits =
c(0,max(long.term.df$rel.WIS.skill)))
p %>%
ggplotly(tooltip = c("group")) %>%
layout(legend = list(orientation = "h",
bordercolor="black",
borderwidth = 2,
font = list(size = 11),
y=-.22))
Top.long.term.df.NonEnsemble.2wk =
long.term.df.NonEnsemble.2wk %>%
filter(Model %in%
unique(filter(long.term.df.NonEnsemble.2wk,
Last.Obs.Week == max(Last.Obs.Week),
rel.WIS.skill<1)$Model)
)
p = ggplot() +
geom_line(data = Top.long.term.df.NonEnsemble.2wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model,
colour = Model),
size = .8, alpha = 0.5) +
geom_point(data = Top.long.term.df.NonEnsemble.2wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model,
colour = Model),
size = 2, alpha = 0.5) +
colScale +
geom_line(data = long.term.df.Ensemble.2wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model),
colour = "black", size = 1) +
geom_point(data = long.term.df.Ensemble.2wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model),
colour = "black", size = 2.2) +
ylab("Mean Pairwise WIS") +
xlab("Last Week of Evaluation Window") +
ggtitle(label = "2 Week Evaluation Window") +
scale_y_continuous(limits =
c(0,max(Top.long.term.df.NonEnsemble.2wk$rel.WIS.skill))) +
guides(group=guide_legend(ncol=2))
p %>%
ggplotly(tooltip = c("group")) %>%
layout(legend = list(orientation = "h",
bordercolor="black",
borderwidth = 2,
font = list(size = 11),
y=-.17))
Top.long.term.df.NonEnsemble.4wk =
long.term.df.NonEnsemble.4wk %>%
filter(Model %in%
unique(filter(long.term.df.NonEnsemble.4wk,
Last.Obs.Week == max(Last.Obs.Week),
rel.WIS.skill<1)$Model)
)
p = ggplot() +
geom_line(data = Top.long.term.df.NonEnsemble.4wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model,
colour = Model),
size = .8, alpha = 0.5) +
geom_point(data = Top.long.term.df.NonEnsemble.4wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model,
colour = Model),
size = 2, alpha = 0.5) +
colScale +
geom_line(data = long.term.df.Ensemble.4wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model),
colour = "black", size = 1) +
geom_point(data = long.term.df.Ensemble.4wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model),
colour = "black", size = 2.2) +
ylab("Mean Pairwise WIS") +
xlab("Last Week of Evaluation Window") +
ggtitle(label = "4 Week Evaluation Window") +
scale_y_continuous(limits =
c(0,max(Top.long.term.df.NonEnsemble.4wk$rel.WIS.skill))) +
guides(group=guide_legend(ncol=2))
p %>%
ggplotly(tooltip = c("group")) %>%
layout(legend = list(orientation = "h",
bordercolor="black",
borderwidth = 2,
font = list(size = 11),
y=-.17))
Top.long.term.df.NonEnsemble.8wk =
long.term.df.NonEnsemble.8wk %>%
filter(Model %in%
unique(filter(long.term.df.NonEnsemble.8wk,
Last.Obs.Week == max(Last.Obs.Week),
rel.WIS.skill<1)$Model)
)
p = ggplot() +
geom_line(data = Top.long.term.df.NonEnsemble.8wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model,
colour = Model),
size = .8, alpha = 0.5) +
geom_point(data = Top.long.term.df.NonEnsemble.8wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model,
colour = Model),
size = 2, alpha = 0.5) +
colScale +
geom_line(data = long.term.df.Ensemble.8wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model),
colour = "black", size = 1) +
geom_point(data = long.term.df.Ensemble.8wk,
mapping = aes(x = Last.Obs.EW,
y = rel.WIS.skill,
group = Model),
colour = "black", size = 2.2) +
ylab("Mean Pairwise WIS") +
xlab("Last Week of Evaluation Window") +
ggtitle(label = "8 Week Evaluation Window") +
scale_y_continuous(limits =
c(0,max(Top.long.term.df.NonEnsemble.8wk$rel.WIS.skill))) +
guides(group=guide_legend(ncol=2))
p %>%
ggplotly(tooltip = c("group")) %>%
layout(legend = list(orientation = "h",
bordercolor="black",
borderwidth = 2,
font = list(size = 11),
y=-.17))
View(WIS_all)
View(WIS_last8weeks)
locations_fully_forecasted(WIS_all)
WIS_all =
left_join(WIS_all,
locations_fully_forecasted(WIS_all),
by = "model")
View(WIS_all)
View(WIS_all)
View(WIS_all)
locations.fully.submitted =
WIS_all %>%
filter(model == CEID-Walk
,
target %in% paste(1:4,
"wk ahead",
"inc flu hosp")) %>%
group_by(location_name) %>%
summarise(subs = n()) %>%
ungroup() %>%
filter(subs ==
4*length(unique(WIS_all$target_end_date))) %>%
nrow()
locations.fully.submitted =
WIS_all %>%
filter(model == "CEID-Walk",
,
target %in% paste(1:4,
"wk ahead",
"inc flu hosp")) %>%
group_by(location_name) %>%
summarise(subs = n()) %>%
ungroup() %>%
filter(subs ==
4*length(unique(WIS_all$target_end_date))) %>%
nrow()
locations.fully.submitted
locations.fully.submitted =
WIS_all %>%
filter(model == "CEID-Walk",
,
target %in% paste(1:4,
"wk ahead",
"inc flu hosp"))
locations.fully.submitted
locations.fully.submitted =
WIS_all %>%
filter(model == "CEID-Walk",
,
target %in% paste(1:4,
"wk ahead",
"inc flu hosp")) %>%
group_by(location_name) %>%
summarise(subs = n())
locations.fully.submitted
locations.fully.submitted =
WIS_all %>%
filter(model == "CEID-Walk",
,
target %in% paste(1:4,
"wk ahead",
"inc flu hosp")) %>%
group_by(location_name) %>%
summarise(subs = n()) %>%
ungroup()
locations.fully.submitted
4*length(unique(WIS_all$target_end_date))
length(unique(WIS_all$target_end_date)))
length(unique(WIS_all$target_end_date))
View(WIS_all)
table(WIS_all$target, WIS_all$target_end_date)
c(as.Date("2022-02-19"):as.Date(last.tuesday+4))
as.Date(target_end_date) %in% c(as.Date("2022-02-19"):as.Date(last.tuesday+4))
WIS_Season <- filter(WIS_all, as.Date(target_end_date) %in% c(as.Date("2022-02-19"):as.Date(last.tuesday+4)))
